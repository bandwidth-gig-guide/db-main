
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";


-- Types
CREATE TYPE STATECODE AS ENUM (
    'NSW',
    'VIC',
    'QLD',
    'SA',
    'WA',
    'TAS',
    'ACT',
    'NT'
);

CREATE TYPE SOCIALPLATFORM AS ENUM (
    'Website',
    'Facebook',
    'Twitter',
    'Instagram',
    'TikTok',
    'SoundCloud',
    'Spotify',
    'Bandcamp',
    'YouTube'
);


-- Main Tables
CREATE TABLE Image (
    ImageID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    URL TEXT NOT NULL
);

CREATE TABLE Artist (
    ArtistID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    Title VARCHAR(100) NOT NULL,
    Country VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    StateCode STATECODE NOT NULL,
    YearFounded CHAR(4) NOT NULL,
    Description TEXT NOT NULL,
    SpotifyEmbedURL TEXT,
    YoutubeEmbedURL TEXT
);

CREATE TABLE Venue (
    VenueID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    Title VARCHAR(100) NOT NULL,
    StreetAddress VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    StateCode STATECODE NOT NULL,
    PostCode INT(4) NOT NULL,
    Description TEXT NOT NULL,
    WebsiteURL TEXT,
    PhoneNumber VARCHAR(20) NOT NULL
);

CREATE TABLE VenueStage (
    StageID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    VenueID UUID REFERENCES Venue(VenueID) ON DELETE CASCADE,
    Title VARCHAR(100) NOT NULL,
    Description TEXT NOT NULL,
    Capacity INT(6) NOT NULL
);

CREATE TABLE Event (
    EventID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    VenueID UUID REFERENCES Venue(VenueID) ON DELETE CASCADE,
    StageID INT REFERENCES VenueStage(StageID) ON DELETE CASCADE,
    Title TEXT NOT NULL,
    Description TEXT NOT NULL,
    StartDateTime TIMESTAMP NOT NULL,
    EndDateTime TIMESTAMP NOT NULL,
    OriginalPostURL TEXT NOT NULL,
    TicketSaleURL TEXT
);

CREATE TABLE User (
    UserID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    EmailHash VARCHAR(255) NOT NULL UNIQUE,
    PasswordHash VARCHAR(255) NOT NULL,
    Country VARCHAR(100) NOT NULL,
    City VARCHAR(100) NOT NULL,
    StateCode STATECODE NOT NULL
);

-- Secondary Tables

CREATE TABLE EventPerformance (
    EventID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    ArtistID UUID REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    SetListPosition INT(2) NOT NULL,
    StartDateTime TIMESTAMP NOT NULL,
    EndDateTime TIMESTAMP NOT NULL
);

CREATE TABLE EventPrice (
    EventID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    TicketType VARCHAR(50) PRIMARY KEY,
    Price DECIMAL(10,2) NOT NULL
);

CREATE TABLE VenueOpeningHours (
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE,
    MonOpen TIME,
    MonClose TIME,
    TueOpen TIME,
    TueClose TIME,
    WedOpen TIME,
    WedClose TIME,
    ThurOpen TIME,
    ThurClose TIME,
    FriOpen TIME,
    FriClose TIME,
    SatOpen TIME,
    SatClose TIME,
    SunOpen TIME,
    SunClose TIME
);

-- Tertiary Tables : Image

CREATE TABLE UserImage (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    ImageID UUID PRIMARY REFERENCES Image(ImageID) ON DELETE CASCADE
);

-- Tertiary Tables : Artist

CREATE TABLE UserArtistSaved (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    ArtistID UUID PRIMARY REFERENCES Artist(ArtistID) ON DELETE CASCADE
);

CREATE TABLE UserArtistViewed (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    ArtistID UUID PRIMARY REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    DateTimeViewed TIMESTAMP DEFAULT NOW()
);

CREATE TABLE ArtistUserComment (
    CommentID PRIMARY KEY DEFAULT uuid_generate_v4(),
    ArtistID UUID REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    UserID UUID REFERENCES User(UserID) ON DELETE CASCADE,
    DateTime TIMESTAMP DEFAULT NOW()
);

CREATE TABLE ArtistUserCommentLike (
    CommentID UUID PRIMARY REFERENCES ArtistUserComment(CommentID) ON DELETE CASCADE,
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE ArtistSocial (
    ArtistID UUID PRIMARY REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    SocialPlatform SOCIALPLATFORM PRIMARY KEY,
    Handle VARCHAR(100) NOT NULL,
    URL TEXT NOT NULL
);

CREATE TABLE ArtistFeatured (
    ArtistID UUID PRIMARY REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    ImageID UUID REFERENCES Image(ImageID) ON DELETE CASCADE,
    StartDateTime TIMESTAMP NOT NULL,
    EndDateTime TIMESTAMP NOT NULL
);

CREATE TABLE ArtistImage (
    ArtistID UUID PRIMARY REFERENCES Artist(ArtistID) ON DELETE CASCADE,
    ImageID UUID PRIMARY REFERENCES Image(ImageID) ON DELETE CASCADE,
    DisplayOrder INT(1) PRIMARY KEY
);

-- Tertiary Tables : Event

CREATE TABLE UserEventSaved (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    EventID UUID PRIMARY REFERENCES Event(EventID) ON DELETE CASCADE
);

CREATE TABLE UserEventViewed (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    EventID UUID PRIMARY REFERENCES Event(EventID) ON DELETE CASCADE,
    DateTimeViewed TIMESTAMP DEFAULT NOW()
);

CREATE TABLE EventUserComment (
    CommentID PRIMARY KEY DEFAULT uuid_generate_v4(),
    EventID UUID REFERENCES Event(EventID) ON DELETE CASCADE,
    UserID UUID REFERENCES User(UserID) ON DELETE CASCADE,
    DateTime TIMESTAMP DEFAULT NOW()
);

CREATE TABLE EventUserCommentLike (
    CommentID UUID PRIMARY REFERENCES EventUserComment(CommentID) ON DELETE CASCADE,
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE EventSocial (
    EventID UUID PRIMARY REFERENCES Event(EventID) ON DELETE CASCADE,
    SocialPlatform SOCIALPLATFORM PRIMARY KEY,
    Handle VARCHAR(100) NOT NULL,
    URL TEXT NOT NULL
);

CREATE TABLE EventFeatured (
    EventID UUID PRIMARY REFERENCES Event(EventID) ON DELETE CASCADE,
    ImageID UUID REFERENCES Image(ImageID) ON DELETE CASCADE,
    StartDateTime TIMESTAMP NOT NULL,
    EndDateTime TIMESTAMP NOT NULL
);

CREATE TABLE EventImage (
    EventID UUID PRIMARY REFERENCES Event(EventID) ON DELETE CASCADE,
    ImageID UUID PRIMARY REFERENCES Image(ImageID) ON DELETE CASCADE,
    DisplayOrder INT(1) PRIMARY KEY
);

-- Tertiary Tables : Venue

CREATE TABLE UserVenueSaved (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE
);

CREATE TABLE UserVenueViewed (
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE,
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE,
    DateTimeViewed TIMESTAMP DEFAULT NOW()
);

CREATE TABLE VenueUserComment (
    CommentID PRIMARY KEY DEFAULT uuid_generate_v4(),
    VenueID UUID REFERENCES Venue(VenueID) ON DELETE CASCADE,
    UserID UUID REFERENCES User(UserID) ON DELETE CASCADE,
    DateTime TIMESTAMP DEFAULT NOW()
);

CREATE TABLE VenueUserCommentLike (
    CommentID UUID PRIMARY REFERENCES VenueUserComment(CommentID) ON DELETE CASCADE,
    UserID UUID PRIMARY REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE VenueSocial (
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE,
    SocialPlatform SOCIALPLATFORM PRIMARY KEY,
    Handle VARCHAR(100) NOT NULL,
    URL TEXT NOT NULL
);

CREATE TABLE VenueFeatured (
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE,
    ImageID UUID REFERENCES Image(ImageID) ON DELETE CASCADE,
    StartDateTime TIMESTAMP NOT NULL,
    EndDateTime TIMESTAMP NOT NULL
);

CREATE TABLE VenueImage (
    VenueID UUID PRIMARY REFERENCES Venue(VenueID) ON DELETE CASCADE,
    ImageID UUID PRIMARY REFERENCES Image(ImageID) ON DELETE CASCADE,
    DisplayOrder INT(1) PRIMARY KEY
);
